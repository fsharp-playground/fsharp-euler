///Project Euler Problem 12
///The sequence of triangle numbers is generated by adding the natural numbers. 
///So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 
///The first ten terms would be:
///
///                      1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
///
///Let us list the factors of the first seven triangle numbers:
///
///     1: 1
///     3: 1,3
///     6: 1,2,3,6
///    10: 1,2,5,10
///    15: 1,3,5,15
///    21: 1,3,7,21
///    28: 1,2,4,7,14,28
///
///We can see that 28 is the first triangle number to have over five divisors.
///
///What is the value of the first triangle number to have over five hundred divisors?
//-----------------------------------------------------------------------
// <copyright file="triang.fs" >
//     Copyright © Cesar Mendoza. All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
open System

let triangle = (1L,1L) |> Seq.unfold (fun (a,b) -> Some (a, (a+b+1L,b+1L)))

let factors n =
        seq {
            yield 1L
            for i in 2L ..  int64(Math.Sqrt(double (n))) do
                if n % i = 0L  then
                    yield i
        }

triangle |> Seq.find (fun n -> (factors n |> Seq.length) * 2 > 500) |> printfn "solution: %d"

Console.ReadKey(true) |> ignore